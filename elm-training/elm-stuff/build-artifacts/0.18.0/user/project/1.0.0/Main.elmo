var _user$project$Main$returnWeightVal = function (result) {
	var _p0 = result;
	if (_p0.ctor === 'Ok') {
		return A2(
			F2(
				function (x, y) {
					return A2(_elm_lang$core$Basics_ops['++'], x, y);
				}),
			'You are this far away from your desired weight: ',
			_elm_lang$core$Basics$toString(
				_elm_lang$core$Basics$abs(_p0._0)));
	} else {
		return _p0._0;
	}
};
var _user$project$Main$testWeights = F2(
	function (a, b) {
		var _p1 = {
			ctor: '_Tuple2',
			_0: _elm_lang$core$String$toInt(a),
			_1: _elm_lang$core$String$toInt(b)
		};
		var newA = _p1._0;
		var newB = _p1._1;
		return (!_elm_lang$core$Native_Utils.eq(newA, newB)) ? _user$project$Main$returnWeightVal(
			A3(
				_elm_lang$core$Result$map2,
				F2(
					function (x, y) {
						return x - y;
					}),
				newA,
				newB)) : 'You are already there!';
	});
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'UserWeight':
				return _elm_lang$core$Native_Utils.update(
					model,
					{weightInput: _p2._0});
			case 'DesiredWeight':
				return _elm_lang$core$Native_Utils.update(
					model,
					{desiredWeightInput: _p2._0});
			default:
				var amount = A2(_user$project$Main$testWeights, model.weightInput, model.desiredWeightInput);
				return _elm_lang$core$Native_Utils.update(
					model,
					{weightCount: amount});
		}
	});
var _user$project$Main$model = {weightInput: '', desiredWeightInput: '', weightCount: ''};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {weightInput: a, desiredWeightInput: b, weightCount: c};
	});
var _user$project$Main$DetermineWeight = {ctor: 'DetermineWeight'};
var _user$project$Main$DesiredWeight = function (a) {
	return {ctor: 'DesiredWeight', _0: a};
};
var _user$project$Main$UserWeight = function (a) {
	return {ctor: 'UserWeight', _0: a};
};
var _user$project$Main$view = function (model) {
	var weightAmounts = A2(_user$project$Main$testWeights, model.weightInput, model.desiredWeightInput);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('weight-app'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Determine How Close You Are'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h1,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('To Your Desired Weight'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$p,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('counter'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(model.weightCount)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('text'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('Add current weight'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$UserWeight),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('text'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('Add desired weight'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$DesiredWeight),
											_1: {ctor: '[]'}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('calc-button'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$DetermineWeight),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Find Out'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})();
